"""Add order status enum

Revision ID: d675bc1062f4
Revises: 4f8ebfabc61d
Create Date: 2024-06-18 20:54:56.418298

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects.postgresql import ENUM

# revision identifiers, used by Alembic.
revision: str = "d675bc1062f4"
down_revision: Union[str, None] = "4f8ebfabc61d"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

order_status_enum = ENUM(
    "Новый", "В обработке", "Отправлен", "Доставлен", "Отменен", name="orderstatusenum"
)


def upgrade() -> None:
    order_status_enum.create(op.get_bind(), checkfirst=True)
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("ix_order_statuses_id", table_name="order_statuses")
    op.drop_table("order_statuses")
    op.alter_column(
        "orders",
        "status",
        existing_type=sa.String(),
        type_=order_status_enum,
        postgresql_using="status::text::orderstatusenum",
    )
    op.drop_column("orders", "decline_desc")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "orders",
        sa.Column("decline_desc", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.alter_column(
        "orders",
        "status",
        existing_type=sa.Enum(
            "NEW",
            "PROCESSING",
            "SHIPPED",
            "DELIVERED",
            "CANCELLED",
            name="orderstatusenum",
        ),
        type_=sa.VARCHAR(),
        existing_nullable=False,
    )
    op.create_table(
        "order_statuses",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("status_name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name="order_statuses_pkey"),
    )
    op.create_index("ix_order_statuses_id", "order_statuses", ["id"], unique=False)
    # ### end Alembic commands ###
